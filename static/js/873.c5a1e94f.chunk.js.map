{"version":3,"file":"static/js/873.c5a1e94f.chunk.js","mappings":"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","sources":["HOC/AuthRedirect.js","webpack://1-1-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://1-1-app/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://1-1-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.userAuth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let redirectComponent = (props) => {\r\n\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    const connectRedirectComponent =\r\n        connect(mapStateToPropsRedirect, null)(redirectComponent)\r\n\r\n    return connectRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__cgmJi\",\"dialogs_item\":\"Dialogs_dialogs_item__lvHmP\",\"messages\":\"Dialogs_messages__rVSJj\",\"flex_colomn\":\"Dialogs_flex_colomn__uB1mU\",\"active\":\"Dialogs_active__CXKpr\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__SBRH+\",\"active\":\"Dialog_active__nS2uc\",\"avatar\":\"Dialog_avatar__uBSAR\"};","import React from \"react\";\r\nimport style from \"./Dialog.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// const isActiveDialog = ({isActive}) => isActive ? style.active : style.dialog\r\nconst Dialog = ({id,name}) => {\r\n    let path = `/dialogs/${id}`;\r\n\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <img className={style.avatar} src=\"https://cdn.dribbble.com/userupload/8386880/file/original-3de2e5251e00225b221b5658f2b6c254.jpg?compress=1&resize=840x630&vertical=center\" alt=\"ava\"/>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__5pEBI\",\"ava\":\"Message_ava__i2OOZ\",\"chat\":\"Message_chat__I9WbL\",\"active\":\"Message_active__B10lD\"};","import React from \"react\";\r\nimport style from \"./Message.module.css\"\r\n\r\nconst Message = ({name}) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <img className={style.ava} src=\"https://cdn.dribbble.com/userupload/8386880/file/original-3de2e5251e00225b221b5658f2b6c254.jpg?compress=1&resize=840x630&vertical=center\" alt=\"ava\"/>\r\n            <div className={style.chat}>{name}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\n// const isActiveDialog = ({isActive}) => isActive ? style.active : style.dialog\r\n\r\nconst Dialogs = ({dialogs, messages, addNewMessage}) => {\r\n    let dialogsElements = dialogs.map((d) => (<Dialog key={d.id} name={d.name} id={d.id}/>))\r\n    let messagesElements = messages.map((m) => (<Message key={m.id} name={m.name}/>))\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: {errors},\r\n        watch,\r\n        reset,\r\n    } = useForm()\r\n\r\n    const onSubmit = (data) => {\r\n        data.dialogsNewMessageBody ? addNewMessage(data.dialogsNewMessageBody) : alert('before I help u send message, write the message :)')\r\n        reset({dialogsNewMessageBody: ''})\r\n    }\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs_item}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <form className={style.flex_colomn} onSubmit={handleSubmit(onSubmit)}>\r\n                    <textarea placeholder={'enter your message...'}\r\n                              {...register('dialogsNewMessageBody', {\r\n                                  maxLength: {\r\n                                      value: 100,\r\n                                      message: 'Too much symbols, keep less then 100 symbols'\r\n                                  }\r\n                              })}\r\n                              aria-invalid={errors.login ? 'true' : 'false'}\r\n                    />\r\n                    {errors.dialogsNewMessageBody && <span>{errors.dialogsNewMessageBody.message}</span>}\r\n                    <input type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {addNewMessageAC} from \"../../Redux/reducer_dialogPage\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogPage.dialogs,\r\n        messages: state.dialogPage.messages,\r\n        isAuth: state.userAuth.isAuth,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: (text) => {\r\n            dispatch(addNewMessageAC(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n"],"names":["mapStateToPropsRedirect","state","isAuth","userAuth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","_ref","id","name","path","concat","_jsxs","className","style","children","src","alt","NavLink","dialogs","messages","addNewMessage","dialogsElements","map","d","Dialog","messagesElements","m","Message","_useForm","useForm","register","handleSubmit","errors","formState","reset","watch","onSubmit","data","dialogsNewMessageBody","alert","placeholder","maxLength","value","message","login","type","compose","dialogPage","dispatch","text","addNewMessageAC","Dialogs"],"sourceRoot":""}