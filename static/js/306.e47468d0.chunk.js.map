{"version":3,"file":"static/js/306.e47468d0.chunk.js","mappings":"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","sources":["HOC/AuthRedirect.js","webpack://1-1-app/./src/components/Profile/Profile.module.css?b512","webpack://1-1-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://1-1-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://1-1-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","HOC/WithRouter.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.userAuth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let redirectComponent = (props) => {\r\n\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    const connectRedirectComponent =\r\n        connect(mapStateToPropsRedirect, null)(redirectComponent)\r\n\r\n    return connectRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__rTLlp\"};","// extracted by mini-css-extract-plugin\nexport default {\"contentImg\":\"ProfileInfo_contentImg__fVRGc\",\"data\":\"ProfileInfo_data__ghz9B\",\"avatar\":\"ProfileInfo_avatar__hFZsR\",\"contacts\":\"ProfileInfo_contacts__eTkap\",\"isWork\":\"ProfileInfo_isWork__r4ekm\"};","import React, {useState} from 'react'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [statusText, setStatusText] = useState(props.userStatus)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(statusText)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatusText(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {editMode &&\r\n                <div>\r\n                    <input type=\"text\" autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={statusText}\r\n                           onChange={onStatusChange}\r\n                    />\r\n                </div>}\r\n            {!editMode &&\r\n                <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {props.userStatus || '-----***'}\r\n                        </span>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks;","import React from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport sadSmile from \"../../../assets/img/sadSmile.png\";\r\nimport luckySmile from \"../../../assets/img/luckySmile.png\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.userProfile) {\r\n        return <Preloader width={{width: \"100%\"}}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.data}>\r\n                {props.userProfile.photos.large ? <img className={style.avatar} src={props.userProfile.photos.large}/>\r\n                    : <img className={style.avatar}\r\n                           src=\"https://cdn.dribbble.com/userupload/9066333/file/original-b77ad6740798ed3ddb5f01e51c821124.png?resize=840x630&vertical=center\"\r\n                           alt=\"profile pic\"/>\r\n                }\r\n                <ProfileStatusHooks updateStatus={props.updateStatus} userStatus={props.userStatus}/>\r\n            </div>\r\n\r\n            <p>{props.userProfile.aboutMe}</p>\r\n            <ul className={style.contacts}>\r\n                contacts:\r\n                <li>{props.userProfile.contacts.facebook}</li>\r\n                <li>{props.userProfile.contacts.website}</li>\r\n                <li>{props.userProfile.contacts.vk}</li>\r\n                <li>{props.userProfile.contacts.twitter}</li>\r\n                <li>{props.userProfile.contacts.instagram}</li>\r\n                <li>{props.userProfile.contacts.youtube}</li>\r\n                <li>{props.userProfile.contacts.github}</li>\r\n                <li>{props.userProfile.contacts.mainLink}</li>\r\n            </ul>\r\n            <div className={style.isWork}>\r\n                <div>lookingForAJob?</div>\r\n                {props.userProfile.lookingForAJob ? <span><img src={luckySmile}/>what is your offer..?</span>\r\n                    : <span><img src={sadSmile}/>No, sorry..</span>}\r\n            </div>\r\n            <div><span>Description: </span>\r\n                {props.userProfile.lookingForAJobDescription}\r\n            </div>\r\n            <div>fullName:\r\n                <span>  {(props.userProfile.fullName).toUpperCase()}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post_area\":\"MyPosts_post_area__QAczv\",\"posts\":\"MyPosts_posts__d3g5u\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__g2f4-\"};","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={style.item} >\r\n            <img src=\"https://cdn.dribbble.com/userupload/8277602/file/original-69b457bdccf5b1f479b58d9b8124d97b.png?compress=1&crop=0x0-1600x1200&resize=840x630&vertical=center\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <button>like</button> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport style from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst MyPosts = React.memo(({postInfo, addNewPost}) => {\r\n    let postInfoComps = [...postInfo].map((p) => (<Post key={p.id} likesCount={p.countOfLikes} message={p.message}/>))\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        reset,\r\n        formState: {errors},\r\n    } = useForm()\r\n\r\n    const onSubmit = data => {\r\n        data.newPostText ? addNewPost(data.newPostText) : alert('But field is empty...')\r\n        reset({newPostText: ''})\r\n    }\r\n\r\n    return (\r\n        <div className={style.post_area}>\r\n            <h3> my-posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <textarea placeholder=\"write your post..\" {...register(\"newPostText\", {\r\n                        maxLength: {\r\n                            value: 100,\r\n                            message: 'Too much symbols, keep less then 100 symbols'\r\n                        }\r\n                    })}/>\r\n                    {errors.newPostText && <span>{errors.newPostText.message}</span>}\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add post</button>\r\n                </div>\r\n            </form>\r\n\r\n            <div className={style.posts}>\r\n                {postInfoComps}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts;","import {addNewPostAC} from \"../../../Redux/reducer_profilePage\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postInfo: state.profilePage.postInfo,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addNewPostAC(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport style from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <body className={style.content}>\r\n        <ProfileInfo updateStatus={props.updateStatus} userStatus={props.userStatus}  userProfile={props.userProfile}/>\r\n        <MyPostsContainer/>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\n const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default withRouter","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileInfo, getProfileStatus, setUserProfile, updateProfileStatus} from \"../../Redux/reducer_profilePage\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {initializeApp} from \"../../Redux/reducer_app\";\r\nimport withRouter from \"../../HOC/WithRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedId\r\n        }\r\n        this.props.getProfileInfo(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     userProfile={this.props.userProfile}\r\n                     userStatus={this.props.userStatus}\r\n                     updateStatus={this.props.updateProfileStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userStatus: state.profilePage.userStatus,\r\n    authorizedId: state.userAuth.authUserId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {initializeApp,\r\n        setUserProfile, getProfileInfo, getProfileStatus, updateProfileStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)"],"names":["mapStateToPropsRedirect","state","isAuth","userAuth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","userStatus","_useState4","statusText","setStatusText","_jsxs","children","type","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","onDoubleClick","userProfile","className","style","content","data","photos","large","avatar","src","alt","ProfileStatusHooks","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","isWork","lookingForAJob","luckySmile","sadSmile","lookingForAJobDescription","fullName","toUpperCase","Preloader","width","message","likesCount","React","_ref","postInfo","addNewPost","postInfoComps","_toConsumableArray","map","p","Post","countOfLikes","id","_useForm","useForm","handleSubmit","register","reset","errors","formState","onSubmit","newPostText","alert","placeholder","maxLength","profilePage","dispatch","addNewPostAC","MyPosts","ProfileInfo","MyPostsContainer","location","useLocation","navigate","useNavigate","params","useParams","router","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","authorizedId","getProfileInfo","getProfileStatus","Profile","updateProfileStatus","compose","authUserId","initializeApp","setUserProfile","withRouter"],"sourceRoot":""}