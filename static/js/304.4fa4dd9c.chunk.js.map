{"version":3,"file":"static/js/304.4fa4dd9c.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.js","webpack://1-1-app/./src/components/Profile/Profile.module.css?b512","webpack://1-1-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusHooks.jsx","webpack://1-1-app/./src/components/Profile/ProfileInfo/ProfileData/ProfileData.module.css?ce4d","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","webpack://1-1-app/./src/components/Profile/ProfileInfo/ProfileData/ProfileDataForm.module.css?e8b8","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://1-1-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://1-1-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","HOC/WithRouter.js","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.userAuth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let redirectComponent = (props) => {\r\n\r\n        if (!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...props} />\r\n    }\r\n\r\n    const connectRedirectComponent =\r\n        connect(mapStateToPropsRedirect, null)(redirectComponent)\r\n\r\n    return connectRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__rTLlp\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__GBn3K\",\"contentImg\":\"ProfileInfo_contentImg__fVRGc\",\"top\":\"ProfileInfo_top__tAOSa\",\"avatar_wrapper\":\"ProfileInfo_avatar_wrapper__eRvLs\",\"uploadBTN\":\"ProfileInfo_uploadBTN__MoNpU\",\"avatar\":\"ProfileInfo_avatar__hFZsR\",\"contacts\":\"ProfileInfo_contacts__eTkap\"};","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [statusText, setStatusText] = useState(props.userStatus)\r\n\r\n    useEffect(() => {\r\n        setStatusText(props.userStatus)\r\n    }, [props.userStatus]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(statusText)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatusText(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{paddingBottom: '15px',display:'flex'}}>\r\n                <b style={{paddingRight: '7px'}}>Status:</b>\r\n                {editMode &&\r\n                    <div>\r\n                        <input type=\"text\" autoFocus={true}\r\n                               onBlur={deactivateEditMode}\r\n                               value={statusText}\r\n                               onChange={onStatusChange}\r\n                        />\r\n                    </div>}\r\n                {!editMode &&\r\n                    <div>\r\n                        <span style={{cursor: 'pointer'}} onDoubleClick={activateEditMode}>\r\n                            {props.userStatus || '-----***'}\r\n                        </span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusHooks;","// extracted by mini-css-extract-plugin\nexport default {\"admin_btn\":\"ProfileData_admin_btn__ykbEN\",\"topic\":\"ProfileData_topic__BtK5l\"};","import style from \"./ProfileData.module.css\";\r\nimport React from \"react\";\r\n\r\nconst ProfileData = ({userProfile, isOwner, startAdminMode, ...props}) => {\r\n\r\n    return (\r\n        <>\r\n            {isOwner ? <button className={style.admin_btn} onClick={startAdminMode}>change data</button> : ''}\r\n\r\n            <div className={style.topic}><b>looking for a job:</b>\r\n                {userProfile.lookingForAJob\r\n                    ? <span>  What is your offer..?</span>\r\n                    : <span>  No, sorry..</span>}\r\n            </div>\r\n            {userProfile.lookingForAJob &&\r\n                <div className={style.topic}><b>My skills:</b>\r\n                    <p>{userProfile.lookingForAJobDescription}</p>\r\n                </div>\r\n            }\r\n            <div className={style.topic}><b>Full name:</b>\r\n                <span>  {(userProfile.fullName).toUpperCase()}</span>\r\n            </div>\r\n            <div className={style.topic}><b>About me:</b>\r\n                <p>{userProfile.aboutMe}</p>\r\n            </div>\r\n            <div className={style.topic}><b>Contacts:</b>\r\n                <ul className={style.contacts}>\r\n                    {/* Object.keys - create string from inner Obj */}\r\n                    {/* so we do map(key) to create Contacts */}\r\n                    {Object.keys(userProfile.contacts).map(key => {\r\n                     return <Contact key={key} title={key} value={userProfile.contacts[key]}/>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Contact = ({title, value}) => {\r\n    return (<li>\r\n        <b>{title}:</b> {value}\r\n    </li>)\r\n}\r\n\r\nexport default ProfileData;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileDataForm_form__kXhl3\",\"submit_btn\":\"ProfileDataForm_submit_btn__4rbaY\",\"return_btn\":\"ProfileDataForm_return_btn__YCg0o\",\"success\":\"ProfileDataForm_success__LdAi9\",\"error_msg__box\":\"ProfileDataForm_error_msg__box__GZasR\",\"error_msg\":\"ProfileDataForm_error_msg__U4LJc\",\"contacts_ul\":\"ProfileDataForm_contacts_ul__TVnVu\",\"contacts_li\":\"ProfileDataForm_contacts_li__quZyC\"};","import {useForm} from \"react-hook-form\";\r\nimport style from \"./ProfileDataForm.module.css\";\r\nimport {useState} from \"react\";\r\n\r\nconst ProfileDataForm = ({userProfile, sendingSuccess, updateProfileInfo, onSubmitCallback, ...props}) => {\r\n\r\n    const capitalizeFirstLetter = (text) => {\r\n        return text.charAt(0).toUpperCase() + text.slice(1);\r\n    }\r\n\r\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false)\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        setError,\r\n        clearErrors,\r\n        watch,\r\n        reset,\r\n        formState: {errors},\r\n    } = useForm({\r\n        mode: \"onChange\",\r\n        criteriaMode: 'all',\r\n        defaultValues: {\r\n            lookingForAJob: userProfile.lookingForAJob,\r\n            lookingForAJobDescription: userProfile.lookingForAJobDescription,\r\n            fullName: userProfile.fullName,\r\n            aboutMe: userProfile.aboutMe,\r\n            contacts: {\r\n                github: userProfile.contacts.github,\r\n                vk: userProfile.contacts.vk,\r\n                facebook: userProfile.contacts.facebook,\r\n                instagram: userProfile.contacts.instagram,\r\n                twitter: userProfile.contacts.twitter,\r\n                website: userProfile.contacts.website,\r\n                youtube: userProfile.contacts.youtube,\r\n                mainLink: userProfile.contacts.mainLink\r\n            },\r\n        }\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        updateProfileInfo(data, setError)\r\n        setShowSuccessMessage(true)\r\n        /*reset({\r\n            lookingForAJob: '',\r\n            lookingForAJobDescription: '',\r\n            fullName: '',\r\n            aboutMe: '',\r\n            contacts: {\r\n                github: '',\r\n                vk: '',\r\n                facebook: '',\r\n                instagram: '',\r\n                twitter: '',\r\n                website: '',\r\n                youtube: '',\r\n                mainLink: ''\r\n            },\r\n        })*/\r\n    }\r\n\r\n    const handleClearFieldErrors = () => {\r\n        clearErrors();\r\n        setShowSuccessMessage(false)\r\n    };\r\n\r\n    return (<>\r\n        {(showSuccessMessage && sendingSuccess)\r\n            ? <div className={style.success}> Your form was submitted successfully!</div>\r\n            : null}\r\n\r\n        {(showSuccessMessage && !sendingSuccess)\r\n            ? <div className={style.error_msg__box}> Your form has submitted with Error!</div>\r\n            : null}\r\n\r\n        <form className={style.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <input className={style.submit_btn} type=\"submit\"/>\r\n\r\n            <button className={style.return_btn} type=\"button\" onClick={() => onSubmitCallback()}>\r\n                Back\r\n            </button>\r\n\r\n            <label>looking for a job:</label>\r\n            <input style={{marginRight: 'auto'}} type={\"checkbox\"} {...register(\"lookingForAJob\")} />\r\n\r\n            <label>My skills:</label>\r\n            <input placeholder=\"JS, CSS, HTML\"   {...register(\"lookingForAJobDescription\")} />\r\n\r\n            <label>Full name:</label>\r\n            <input placeholder=\"John Johns\"  {...register(\"fullName\")} />\r\n\r\n            <label>About me:</label>\r\n            <input placeholder=\"I'am funny...\" {...register(\"aboutMe\")} />\r\n\r\n\r\n            <h4 style={{marginBottom: '0'}}>Contacts</h4>\r\n            <ul className={style.contacts_ul}>\r\n                {Object.entries(userProfile.contacts).map(([label, fieldName]) => {\r\n                    return (<li key={`${label}input`} className={style.contacts_li}>\r\n                        <label>{capitalizeFirstLetter(label)}:</label>\r\n                        <input placeholder={label} {...register(`contacts.${label}`)}\r\n                               onChange={() => handleClearFieldErrors()}/>\r\n                    </li>)\r\n                })}</ul>\r\n\r\n\r\n            {/*    <label>Github:</label>\r\n            <input placeholder=\"github\" {...register(\"contacts.github\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Vk:</label>\r\n            <input placeholder=\"vk\"{...register(\"contacts.vk\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Facebook:</label>\r\n            <input placeholder=\"facebook\" {...register(\"contacts.facebook\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Instagram:</label>\r\n            <input placeholder=\"instagram\" {...register(\"contacts.instagram\")}\r\n                   onChange={() => handleClearFieldErrors()}/>\r\n            <label>Twitter(X):</label>\r\n            <input placeholder=\"twitter\" {...register(\"contacts.twitter\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Website:</label>\r\n            <input placeholder=\"website\" {...register(\"contacts.website\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Youtube:</label>\r\n            <input placeholder=\"youtube\" {...register(\"contacts.youtube\")} onChange={() => handleClearFieldErrors()}/>\r\n            <label>Main link:</label>\r\n            <input placeholder=\"mainLink\" {...register(\"contacts.mainLink\")} onChange={() => handleClearFieldErrors()}/>\r\n           */} {errors.serverError && <div className={style.error_msg__box}>\r\n            <p>{errors.serverError.type}</p>\r\n            {errors.serverError.messages.map(m => <p className={style.error_msg} key={m}>{m}</p>)}\r\n        </div>}\r\n        </form>\r\n    </>)\r\n}\r\n\r\n\r\nexport default ProfileDataForm;","import React, {useState} from 'react'\r\nimport style from './ProfileInfo.module.css'\r\nimport ErrorBoundary from \"../../common/Preloader/ErrorBoundary\";\r\nimport myAvatar from \"../../../assets/img/users_ava.png\";\r\nimport ProfileStatusHooks from \"./ProfileStatus/ProfileStatusHooks\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({userProfile, updateProfileInfo, sendingSuccess, userStatus, updateStatus, isOwner, ...props}) => {\r\n\r\n    const [adminMode, setAdminMode] = useState(false)\r\n\r\n    let startAdminMode = () => {\r\n        setAdminMode(true)\r\n    }\r\n\r\n    if (!userProfile) {\r\n        return <ErrorBoundary width={{width: \"100%\"}}/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        e.target.files.length && props.updateProfilePhoto(e.target.files[0])\r\n    }\r\n\r\n    const handleProfileDataFormSubmit = () => {\r\n           setAdminMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div className={style.top}>\r\n                <div className={style.avatar_wrapper}>\r\n                    <img className={style.avatar} src={userProfile.photos.large || myAvatar} alt=\"profile pic\"/>\r\n                    {isOwner ? <input onChange={onMainPhotoSelected} type=\"file\" className={style.uploadBTN}/> : ''}\r\n                </div>\r\n            </div>\r\n            <ProfileStatusHooks updateStatus={updateStatus} userStatus={userStatus}/>\r\n\r\n            {adminMode\r\n                ? <ProfileDataForm onSubmitCallback={handleProfileDataFormSubmit} sendingSuccess={sendingSuccess}\r\n                                   updateProfileInfo={updateProfileInfo} userProfile={userProfile} isOwner={isOwner}/>\r\n                : <ProfileData startAdminMode={startAdminMode} userProfile={userProfile} isOwner={isOwner}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"post_area\":\"MyPosts_post_area__QAczv\",\"posts\":\"MyPosts_posts__d3g5u\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__g2f4-\"};","import React from 'react'\r\nimport style from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={style.item} >\r\n            <img src=\"https://cdn.dribbble.com/userupload/8277602/file/original-69b457bdccf5b1f479b58d9b8124d97b.png?compress=1&crop=0x0-1600x1200&resize=840x630&vertical=center\" alt=\"\" />\r\n            {props.message}\r\n            <div>\r\n                <button>like</button> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport style from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst MyPosts = React.memo(({postInfo, addNewPost}) => {\r\n    let postInfoComps = [...postInfo].map((p) => (<Post key={p.id} likesCount={p.countOfLikes} message={p.message}/>))\r\n    const {\r\n        handleSubmit,\r\n        register,\r\n        reset,\r\n        formState: {errors},\r\n    } = useForm()\r\n\r\n    const onSubmit = data => {\r\n        data.newPostText ? addNewPost(data.newPostText) : alert('But field is empty...')\r\n        reset({newPostText: ''})\r\n    }\r\n\r\n    return (\r\n        <div className={style.post_area}>\r\n            <h3> my-posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <textarea placeholder=\"write your post..\" {...register(\"newPostText\", {\r\n                        maxLength: {\r\n                            value: 100,\r\n                            message: 'Too much symbols, keep less then 100 symbols'\r\n                        }\r\n                    })}/>\r\n                    {errors.newPostText && <span>{errors.newPostText.message}</span>}\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add post</button>\r\n                </div>\r\n            </form>\r\n\r\n            <div className={style.posts}>\r\n                {postInfoComps}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts;","import {addNewPostAC} from \"../../../Redux/reducer_profilePage\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postInfo: state.profilePage.postInfo,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewPost: (newPostText) => {\r\n            dispatch(addNewPostAC(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,\r\n    mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport style from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <body className={style.content}>\r\n        <ProfileInfo isOwner={props.isOwner}\r\n                     updateProfileInfo={props.updateProfileInfo}\r\n                     updateStatus={props.updateStatus}\r\n                     userStatus={props.userStatus}\r\n                     sendingSuccess={props.sendingSuccess}\r\n                     updateProfilePhoto={props.updateProfilePhoto}\r\n                     userProfile={props.userProfile}/>\r\n        <MyPostsContainer/>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\n const withRouter = (Component) => {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default withRouter","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileInfo,\r\n    getProfileStatus, updateProfileInfo,\r\n    updateProfilePhoto,\r\n    updateProfileStatus\r\n} from \"../../Redux/reducer_profilePage\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {initializeApp} from \"../../Redux/reducer_app\";\r\nimport withRouter from \"../../HOC/WithRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfileData() {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedId\r\n        }\r\n        this.props.getProfileInfo(userId)\r\n        this.props.getProfileStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfileData()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.router.params.userId !== this.props.router.params.userId) {\r\n            this.refreshProfileData()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     userProfile={this.props.userProfile}\r\n                     userStatus={this.props.userStatus}\r\n                     updateProfileInfo={this.props.updateProfileInfo}\r\n                     updateStatus={this.props.updateProfileStatus}\r\n                     updateProfilePhoto={this.props.updateProfilePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userStatus: state.profilePage.userStatus,\r\n    sendingSuccess: state.profilePage.sendingSuccess,\r\n    authorizedId: state.userAuth.authUserId,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        initializeApp, updateProfilePhoto,updateProfileInfo,\r\n        getProfileInfo, getProfileStatus, updateProfileStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)"],"names":["mapStateToPropsRedirect","state","isAuth","userAuth","withAuthRedirect","Component","connect","props","_jsx","_objectSpread","Navigate","to","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","userStatus","_useState4","statusText","setStatusText","useEffect","_Fragment","children","_jsxs","style","paddingBottom","display","paddingRight","type","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","cursor","onDoubleClick","Contact","_ref2","title","_ref","userProfile","isOwner","startAdminMode","_objectWithoutProperties","_excluded","className","admin_btn","onClick","topic","lookingForAJob","lookingForAJobDescription","fullName","toUpperCase","aboutMe","contacts","Object","keys","map","key","sendingSuccess","updateProfileInfo","onSubmitCallback","showSuccessMessage","setShowSuccessMessage","_useForm","useForm","mode","criteriaMode","defaultValues","github","vk","facebook","instagram","twitter","website","youtube","mainLink","register","handleSubmit","setError","clearErrors","errors","watch","reset","formState","onSubmit","data","marginRight","placeholder","marginBottom","entries","text","_ref3","label","charAt","slice","concat","serverError","messages","m","adminMode","setAdminMode","ErrorBoundary","width","src","photos","large","myAvatar","alt","target","files","length","updateProfilePhoto","ProfileStatusHooks","ProfileDataForm","ProfileData","message","likesCount","React","postInfo","addNewPost","postInfoComps","_toConsumableArray","p","Post","countOfLikes","id","newPostText","alert","maxLength","profilePage","dispatch","addNewPostAC","MyPosts","ProfileInfo","MyPostsContainer","location","useLocation","navigate","useNavigate","params","useParams","router","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","authorizedId","getProfileInfo","getProfileStatus","refreshProfileData","prevProps","prevState","snapshot","Profile","updateProfileStatus","compose","authUserId","initializeApp","withRouter"],"sourceRoot":""}